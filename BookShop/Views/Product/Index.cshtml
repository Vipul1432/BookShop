@model IEnumerable<BookShop.Domain.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center text-primary">Product List</h1>
<div class="d-flex justify-content-center">
    <hr class="w-25" />
</div>

<p>
    <a asp-action="Create" class="btn btn-sm btn-primary"><i class="bi bi-plus-circle"></i> Create New</a>
</p>
<partial name="_Notification"></partial>
<table class="table table-stripped table-hover">
    <thead>
        <tr class="table-dark text-center">
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Description)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ISBN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ListPrice)
            </th>*@
            @*<th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price50)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price100)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr class="text-center">
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            @*<td class="col-2 text-start text-truncate" style="max-width:250px">
                @Html.DisplayFor(modelItem => item.Description)
=            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ISBN)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ListPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price50)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price100)
            </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
            <td>
                <a asp-controller="Product" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i class="bi bi-pencil-square"></i> Edit</a> |
                <a data-id="@item.Id" class="btn btn-sm btn-danger delete-Item"><i class="bi bi-trash3"></i> Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts{
    <script>
        $(document).ready(function () {
            $(document).on("click", ".delete-Item", function () {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't delete this record?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {

                    if (result.isConfirmed) {

                        $.ajax({
                            url: "@Url.Content("~/Product/Delete")",
                            method: "POST",
                            data: { id: $(this).data("id") },
                            success: function (data) {
                                if (data) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Your record has been deleted.',
                                        'success'
                                    )
                                    location.reload();
                                }
                            },
                            error: function (err) {
                                Swal.fire(
                                    'Opps!',
                                    'Something went wrong!',
                                    'error'
                                )
                            }

                        })

                    }
                })
            })
        })
    </script>
    }